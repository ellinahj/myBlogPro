{"version":3,"file":"static/webpack/static/development/pages/blog.js.3f4f3a919fe0cc554eac.hot-update.js","sources":["webpack:///./src/utils/apiSend.js"],"sourcesContent":["import axios from 'axios';\nimport Router from 'next/router';\nimport store from '../store';\nimport { setUserInfo, setLogin, setThemeColor, setLoading } from '../actions/base';\nconst localURL = 'http://127.0.0.1:3000';\nconst proURL = '';\nconst instance = axios.create({\n  baseURL: `${localURL}/api`,\n  timeout: 5000\n});\n\ninstance.interceptors.request.use(\n  function(config) {\n    // store.dispatch(setLoading(true));\n    return config;\n  },\n  function(error) {\n    return Promise.reject(error);\n  }\n);\ninstance.interceptors.response.use(\n  function(response) {\n    // http status가 200인 경우\n    // 응답 바로 직전에 대해 작성\n    // .then()\n\n    return response;\n  },\n\n  function(error) {\n    /*\n        http status가 200이 아닌 경우\n        응답 에러 처리\n        .catch()\n    */\n    if (error.response) {\n      if (error.response.status === 401) {\n        if (!(error.response.data.message === 'Mismatched pwd')) {\n          alert('아이디나 비밀번호를 확인해주세요.');\n        }\n      } else if (error.response.status === 400) {\n        Router.push('/login');\n        store.dispatch(setLogin(false));\n        store.dispatch(setUserInfo(undefined));\n        store.dispatch(setThemeColor('#7c7cec'));\n      } else if (error.response.status === 404) {\n        alert('누락된 요청');\n      } else if (error.response.status >= 500) {\n        alert('서버 에러가 발생했습니다.관리자에게 문의해주세요.');\n      }\n    }\n    return Promise.reject(error);\n  }\n);\nexport default instance;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}