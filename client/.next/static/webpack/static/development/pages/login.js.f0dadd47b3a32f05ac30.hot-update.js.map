{"version":3,"file":"static/webpack/static/development/pages/login.js.f0dadd47b3a32f05ac30.hot-update.js","sources":["webpack:///./src/components/common/Header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { colorLuminance } from '../../utils/common';\nimport { loginCheck } from '../../api/auth';\nimport { setLoading, setLogin, setUserInfo, setThemeColor, setToolTip, setFont } from '../../actions/base';\nimport { useRouter } from 'next/router';\nimport { theme } from '../../utils/theme';\nimport ImgBtn from '../../components/common/ImgBtn';\n\nexport default function Header() {\n  const Router = useRouter();\n  const dispatch = useDispatch();\n  const userColor = useSelector(state => state.common.userColor);\n  const userInfo = useSelector(state => state.common.userInfo);\n  const isLoggedIn = useSelector(state => state.common.isLoggedIn);\n  const tooltip = useSelector(state => state.common.showToolTip);\n  const luminantColor = userColor && colorLuminance(userColor, 0.5);\n\n  useEffect(() => {\n    if (Router.asPath !== '/join') {\n      const showTool = JSON.parse(localStorage.getItem('showTool'));\n      if (showTool === false) {\n        dispatch(setToolTip(false));\n      }\n      const storedToken = localStorage.getItem('mydiary_token') && localStorage.getItem('mydiary_token');\n      const config = {\n        access_token: storedToken\n      };\n      loginCheck(config).then(res => {\n        if (res.status === 200 && res.data) {\n          dispatch(setThemeColor(res.data.user_color));\n          dispatch(setUserInfo(res.data));\n          dispatch(setFont(res.data.user_font));\n          dispatch(setLoding(false));\n          dispatch(setLogin(true));\n        }\n      });\n    }\n  }, []);\n  const handleToolTip = () => {\n    localStorage.setItem('showTool', JSON.stringify(false));\n    dispatch(setToolTip(false));\n  };\n\n  return (\n    <HeadWrap userColor={userColor} luminantColor={luminantColor}>\n      <Link href=\"/blog\">\n        <Logo>MyBlog_</Logo>\n      </Link>\n      <ProfileContainer>\n        {userInfo &&\n          (userInfo.profile_url ? (\n            <Link href=\"/mypage\">\n              <Img src={userInfo.profile_url} />\n            </Link>\n          ) : (\n            <StyledTitle hoverColor={userInfo} onClick={() => Router.push('/mypage')}>\n              나의 색깔에 맞는, 나의 로그.\n            </StyledTitle>\n          ))}\n        {!userInfo && <StyledTitle>나의 색깔에 맞는, 나의 로그.</StyledTitle>}\n        {isLoggedIn && tooltip && (\n          <ToolTipWrap profileUrl={userInfo && userInfo.profile_url}>\n            <span className=\"triangle test_1\"></span>\n            <ToolTip>\n              나의 정보를 <br />\n              입력해보세요!\n            </ToolTip>\n            <CloseBtn src={'/images/minClose.svg'} width={12} height={12} onClick={handleToolTip} />\n          </ToolTipWrap>\n        )}\n      </ProfileContainer>\n    </HeadWrap>\n  );\n}\n\nconst HeadWrap = styled.header`\n  width: 100%;\n  max-width: 765px;\n  height: 60px;\n  position: fixed;\n  top: 0;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  background-image: linear-gradient(90deg, ${props => props.userColor}, ${props => props.luminantColor});\n  z-index: 101;\n  justify-content: space-between;\n`;\n\nconst Logo = styled.div`\n  font-weight: bold;\n  font-size: 25px;\n  margin-left: 20px;\n  color: #fff;\n  cursor: pointer;\n`;\nconst ProfileContainer = styled.div`\n  margin-right: 20px;\n  position: relative;\n`;\nconst StyledLink = styled.a`\n  cursor: pointer;\n`;\nconst StyledTitle = styled.span`\n  color: #fff;\n  font-size: 17px;\n  :hover {\n    color: ${props => props.hoverColor && '#f7f7f7'};\n    cursor: ${props => (props.hoverColor ? 'pointer' : '')};\n  }\n`;\n\nconst ToolTipWrap = styled.div`\n  position: absolute;\n  top: ${props => (props.profileUrl ? '45px' : '30px')};\n  right: ${props => (props.profileUrl ? '12px' : '0px')};\n  width: 95px;\n  height: 50px;\n  background: #fefefe;\n  z-index: 9;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  border: 1px solid #eee;\n  animation: motion 0.8s linear infinite alternate;\n  margin-top: 0;\n\n  @keyframes motion {\n    0% {\n      margin-top: 0px;\n    }\n    100% {\n      margin-top: 7px;\n    }\n  }\n\n  .triangle {\n    top: -19px;\n    right: 12px;\n    position: absolute;\n    display: inline-block;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 10px 5px;\n    border-radius: 3px;\n  }\n  .triangle.test_1 {\n    border-color: transparent transparent #fefefe transparent;\n  }\n`;\nconst ToolTip = styled.div`\n  color: #000;\n  font-size: ${theme.ssFont};\n  line-height: 18px;\n`;\nconst Img = styled.img`\n  cursor: pointer;\n  width: ${props => props.width || '30px'};\n  height: ${props => props.width || '30px'};\n  border-radius: ${props => props.width / 2 || 15}px;\n  margin-right: 15px;\n`;\nconst CloseBtn = styled(ImgBtn)`\n  position: absolute;\n  top: 6px;\n  right: 6px;\n  &:hover {\n    background: #ddd;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAqCA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}