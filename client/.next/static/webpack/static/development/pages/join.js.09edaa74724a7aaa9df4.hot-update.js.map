{"version":3,"file":"static/webpack/static/development/pages/join.js.09edaa74724a7aaa9df4.hot-update.js","sources":["webpack:///./src/containers/join/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport { theme } from '../../utils/theme';\nimport { join } from '../../api/auth';\n\nexport default function JoinContainer() {\n  const [id, setId] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [pwdCheck, setPwdCheck] = useState('');\n  // const [idState, setIdState] = useState('');\n  // const [pwdState, setPwdState] = useState('');\n  // const [pwdCheckState, setPwdCheckState] = useState('');\n  const [allState, setAllState] = useState('');\n\n  const enterKey = () => {\n    if (window.event.keyCode === 13) {\n      userJoin();\n    }\n  };\n\n  const idConfirm = value => {\n    setId(value);\n    // if (value !== '' && !idRegex.test(value)) {\n    //   console.log('?');\n    //   setIdState(false);\n    //   return;\n    // }\n    // setIdState(true);\n  };\n  const pwdConfirm = value => {\n    setPwd(value);\n    // if (value !== '' && !pwdRegex.test(value)) {\n    //   setPwdState(false);\n    //   return;\n    // }\n    // //\n    // if (value !== '' && pwdCheckState && value !== pwdCheck) {\n    //   setPwdCheckState(false);\n    //   return;\n    // } else if (value !== '' && pwdCheckState && value === pwdCheck) {\n    //   setPwdCheckState(true);\n    // }\n    // setPwdState(true);\n  };\n  const pwdCheckConfirm = value => {\n    setPwdCheck(value);\n    // if (value !== '' && pwd !== value) {\n    //   setPwdCheckState(false);\n    //   return;\n    // }\n    // setPwdCheckState(true);\n  };\n\n  // useEffect(() => {\n  //   if (idState && pwdState && pwdCheckState) {\n  //     setAllState(true);\n  //   } else {\n  //     setAllState(false);\n  //   }\n  // }, [idState, pwdState, pwdCheckState]);\n\n  const userJoin = () => {\n    const data = { user_id: id, password: pwd };\n    console.log(data, 'data');\n    join(data).then(res => {\n      console.log(res, 'login res login');\n      if (res.status === 200) {\n        alert(' 회원가입이 완료되었습니다.');\n        Router.push('/login');\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <InputWrap>\n        <Title>회원가입</Title>\n        <SubTitle>아이디 *</SubTitle>\n        <input name=\"id\" value={id} onChange={e => idConfirm(e.target.value)} autoComplete=\"off\" />\n        {id.length > 0 && !idRegCheck(id) && (\n          <WarningWrap>\n            <Warning>영문,숫자조합 6~13자리로 입력해주세요.</Warning>\n          </WarningWrap>\n        )}\n\n        <SubTitle>비밀번호 *</SubTitle>\n        <input name=\"pwd\" value={pwd} onChange={e => pwdConfirm(e.target.value)} autoComplete=\"off\" />\n        {pwd.length > 0 && !pwRegCheck(pwd) && (\n          <WarningWrap>\n            <Warning>영문,숫자,특수문자 조합 6~13자리로 입력해주세요.</Warning>\n          </WarningWrap>\n        )}\n\n        <SubTitle>비밀번호 확인 *</SubTitle>\n        <input\n          name=\"pwdCheck\"\n          onKeyUp={enterKey}\n          value={pwdCheck}\n          onChange={e => pwdCheckConfirm(e.target.value)}\n          autoComplete=\"off\"\n        ></input>\n        {pwdCheck.length > 0 && pwdCheck !== pwd && (\n          <WarningWrap>\n            <Warning>비밀번호가 일치하지 않습니다.</Warning>\n          </WarningWrap>\n        )}\n        <JoinBtn\n          userColor={userColor}\n          disabled={!idRegCheck(id) || !pwRegCheck(pwd) || pwdCheck !== pwd}\n          onClick={userJoin}\n          onKeyUp={enterKey}\n          allOk={idRegCheck(id) && pwRegCheck(pwd) && pwdCheck === pwd}\n        >\n          회원가입\n        </JoinBtn>\n      </InputWrap>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InputWrap = styled.div`\n  width: 300px;\n  height: auto;\n  margin-top: 100px;\n  display: flex;\n  flex-direction: column;\n\n  input {\n    width: 100%;\n    height: 40px;\n    box-sizing: border-box;\n    margin-bottom: 5px;\n    padding-left: 10px;\n    font-size: 17px;\n  }\n`;\nconst JoinBtn = styled.button`\n  width: 100%;\n  height: 45px;\n  box-sizing: border-box;\n  font-size: 15px;\n  background: ${props => (props.allOk ? `${props => props.userColor}` : '#ddd')};\n  text-align: center;\n  line-height: 45px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  color: #fff;\n  border: none;\n  font-family: 'Nanum Myeongjo', serif;\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 30px;\n`;\nconst WarningWrap = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\nconst SubTitle = styled.div`\n  font-size: ${theme.mFont};\n  margin-bottom: 10px;\n`;\nconst Warning = styled.div`\n  color: ${theme.redFont};\n  font-size: ${theme.sFont};\n`;\nconst PwdCon = styled.div`\n  margin-bottom: 15px;\n  font-size: 13px;\n  cursor: pointer;\n`;\nconst JoinCon = styled.div`\n  margin-bottom: 15px;\n  font-size: 13px;\n  cursor: pointer;\n`;\nconst BottomWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst idRegex = /^[A-Za-z0-9+]{6,13}$/;\n\nfunction idRegCheck(value) {\n  return idRegex.test(value);\n}\n\nconst pwdRegex = /^.*(?=^.{6,15}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[!@#$%^&+=]).*$/;\n\nfunction pwRegCheck(value) {\n  return pwdRegex.test(value);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AARA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}