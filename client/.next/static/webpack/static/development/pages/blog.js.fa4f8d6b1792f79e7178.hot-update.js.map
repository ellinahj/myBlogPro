{"version":3,"file":"static/webpack/static/development/pages/blog.js.fa4f8d6b1792f79e7178.hot-update.js","sources":["webpack:///./src/containers/blog/ListContainer.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport MyList from '../../components/blog/List';\nimport Menu from '../../components/blog/Menu';\nimport { colorLuminance } from '../../utils/common';\nimport { setCategory, setClickMenu } from '../../actions/base';\nimport { getCate, getBlog, getSearchedBlog, deleteBlog } from '../../api/blog';\nimport Search from '../../components/blog/Search';\n\nexport default function ListContainer() {\n  const dispatch = useDispatch();\n  const userColor = useSelector(state => state.common.userColor);\n  const luminantColor = userColor && colorLuminance(userColor, 0.5);\n  const userInfo = useSelector(state => state.common.userInfo);\n  const category = useSelector(state => state.common.category);\n  const clickMenu = useSelector(state => state.common.clickMenu);\n\n  const [menuIndex, setMenuIndex] = useState(0);\n  const [isSticky, setSticky] = useState(false);\n  const [loadMore, setLoadMore] = useState(true);\n  const [selectedCateId, setSelectedCateId] = useState();\n  const [blogData, setBlogData] = useState(undefined);\n  const [sendToListValue, setSendToListValue] = useState('');\n\n  const handleScroll = () => {\n    if (window.pageYOffset >= 150) {\n      setSticky(true);\n    } else {\n      setSticky(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    const getToken = localStorage.getItem('mydiary_token');\n    if (getToken) {\n      const config = {\n        access_token: getToken\n      };\n      getCate(config).then(res => {\n        if (res.status === 200 && res.data) {\n          if (category && category.length > 0) {\n            // setSelectedCateId(category[0].id);\n            // if (category[0].id !== clickMenu) {\n            //   console.log(clickMenu, 'cliclclclclclclcllc');\n            //   dispatch(setClickMenu(clickMenu));\n            // } else {\n            //   setSelectedCateId(category[0].id);\n            // }\n            // dispatch(setClickMenu({ cateId: category[0].id, index: 0 }));\n          }\n\n          dispatch(setCategory(res.data.data));\n          dispatch(setClickMenu({ cateId: clickMenu.id, index: clickMenu.index }));\n          console.log(res && res.data.data[0], 'data');\n        }\n      });\n    }\n  }, []);\n  console.log(clickMenu, 'clickMenu');\n  const handleMenuClick = (index, cateId) => {\n    // 메뉴 컴포넌트 변경 클릭\n    setMenuIndex(index);\n    setSelectedCateId(cateId);\n    dispatch(setClickMenu({ index, cateId }));\n  };\n  useEffect(() => {\n    console.log('clickmenu==');\n    const storedToken = localStorage.getItem('mydiary_token') && localStorage.getItem('mydiary_token');\n    const config = {\n      access_token: storedToken\n    };\n    console.log(category, 'category');\n    // if (category && category.length > 0) {\n    getBlog(config, clickMenu && clickMenu.cateId).then(res => {\n      if (res.status === 200) {\n        console.log(res.data, 'clickMenu res.data');\n        setBlogData(res.data.data);\n      }\n    });\n    // }\n  }, [clickMenu.index]);\n\n  const getSearch = value => {\n    if (blogData && blogData.length !== 0 && value !== '') {\n      const storedToken = localStorage.getItem('mydiary_token') && localStorage.getItem('mydiary_token');\n      const config = {\n        access_token: storedToken\n      };\n      // if (category && category.length > 0) {\n      console.log(clickMenu.cateId, 'clickMenu.cateId');\n      getSearchedBlog(config, clickMenu && clickMenu.cateId, value).then(res => {\n        if (res.status === 200) {\n          setBlogData(res.data.data);\n          setSendToListValue(value);\n        }\n      });\n      // }\n    }\n  };\n  const deleteItem = (id, imageName) => {\n    console.log(id, imageName, 'im');\n    const getToken = localStorage.getItem('mydiary_token');\n    if (getToken) {\n      const config = {\n        access_token: getToken\n      };\n      const data = { id, image_url: imageName };\n      deleteBlog(config, data).then(res => {\n        if (res.status === 200 && res.data) {\n          console.log(res, 'res dele');\n        }\n      });\n    }\n  };\n  return (\n    <ListCon>\n      <Menu\n        handleMenuClick={handleMenuClick}\n        luminantColor={luminantColor}\n        isSticky={isSticky}\n        menuIndex={menuIndex}\n        userColor={userColor}\n      />\n      {blogData && blogData.length !== 0 && <Search getSearch={getSearch} />}\n      <MyList\n        blogData={blogData}\n        luminantColor={luminantColor}\n        userInfo={userInfo}\n        userColor={userColor}\n        sendToListValue={sendToListValue}\n        deleteItem={deleteItem}\n      />\n    </ListCon>\n  );\n}\nconst ListCon = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}