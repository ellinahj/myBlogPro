{"version":3,"file":"static/webpack/static/development/pages/_app.js.1577218f72638231ffdf.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport store from '../src/store';\nimport * as theme from '../src/utils/theme';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst GlobalStyle = createGlobalStyle`\n\n  html{\n        width:100%;\n        height:100%;\n  };\n  body{\n        margin:0;\n        padding:0;\n        width:100%;\n        height:100%;\n        position: relative;\n        font-family: ${props => props.currentValue};\n        font-size:${props => props.theme.mlFont};\n        background:#fcfcfc;\n  };\n  #__next{  \n            max-width:767px;\n            min-height:100%;\n            box-sizing:border-box;\n            margin: 0 auto;\n            border-left: 1px solid #dedede;\n            border-right: 1px solid #dedede;\n            background: #fff;\n  };\n  a {\n      text-decoration:none; \n      outline:none;        \n  };\n  ul{\n      list-style:none;\n  };\n  button{\n    font-family: ${props => props.currentValue};\n    :hover {\n    opacity: 1;\n    }\n  }\n  ::-webkit-input-placeholder {\n    font-family: ${props => props.currentValue};\n}\ninput{\n  font-family: ${props => props.currentValue};\n  font-size:${props => props.theme.mlFont};\n}\ntextarea{\n  font-family: ${props => props.currentValue};\n  font-size:${props => props.theme.mlFont};\n}\n`;\n\nexport default function MyApp({ Component, pageProps }) {\n  const [currentColor, setCurrentColor] = useState('#7c7cec');\n  const [currentValue, setCurrentValue] = useState(`'Gothic A1', sans-serif`);\n\n  useEffect(() => {\n    function handleSubscribe() {\n      const newColor = store.getState().common.userColor;\n      if (newColor !== currentColor) {\n        setCurrentColor(newColor);\n      }\n    }\n    const subscribeStore = store.subscribe(handleSubscribe);\n    return () => subscribeStore();\n  }, [currentColor]);\n\n  useEffect(() => {\n    function handleChange() {\n      const newValue = store.getState().common.selectFont;\n\n      if (newValue !== currentValue) {\n        setCurrentValue(newValue);\n      }\n    }\n\n    const unsubscribe = store.subscribe(handleChange);\n    return () => unsubscribe();\n  }, [currentValue]);\n\n  return (\n    <Provider store={store}>\n      <GlobalStyle theme={theme} userTheme={currentColor} currentValue={currentValue} />\n      <ThemeProvider theme={theme} userColor={currentColor}>\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AAAA;AACA;AAAA;AAoBA;AAAA;AAMA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}