{"version":3,"file":"static/webpack/static/development/pages/mypage.js.c7156249b3f4ca915aeb.hot-update.js","sources":["webpack:///./src/containers/mypage/EditMenu.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { setCategory } from '../../actions/base';\nimport { getCate } from '../../api/blog';\nimport { deleteCate, updateCate } from '../../api/category';\nimport Container from '../../components/common/Container';\nimport ImgBtn from '../../components/common/ImgBtn';\nimport { BasicTitle, BlueEditBtn, BasicButton } from '../../utils/theme';\n\nexport default function ChangeMenu(props) {\n  const dispatch = useDispatch();\n  const category = useSelector(state => state.common.category);\n  const userColor = useSelector(state => state.common.userColor);\n  const [edit, setEdit] = useState(false);\n  const [cateValue, setCateValue] = useState({\n    0: {},\n    1: {},\n    2: {}\n  });\n  const [cateInputCount, setCateInputCount] = useState(0);\n  const countCate = category ? category.length : 0;\n\n  useEffect(() => {\n    const getToken = localStorage.getItem('mydiary_token');\n    if (getToken) {\n      const config = {\n        access_token: getToken\n      };\n      getCate(config).then(res => {\n        if (res.status === 200 && res.data) {\n          dispatch(setCategory(res.data.data));\n          const result = {};\n          res.data.data\n            ? res.data.data.forEach((item, idx) => {\n                result[idx] = { title: item.title, id: item.id };\n              })\n            : [];\n          setCateValue(result);\n          setCateInputCount(0);\n        }\n      });\n    }\n  }, []);\n  const handleEditMenu = () => {\n    setEdit(!edit);\n  };\n  const handleInput = (index, value) => {\n    setCateValue({\n      ...cateValue,\n      [index]: { ...cateValue[index], title: value }\n    });\n  };\n  const increaseCateValue = () => {\n    if (countCate + cateInputCount < max_category_count) setCateInputCount(cateInputCount + 1);\n  };\n\n  const deleteMenu = () => {\n    if (window.confirm('메뉴에 저장된 글도 함께 삭제됩니다. 정말 삭제하시겠습니까?')) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleDelete = idx => {\n    const tempCateValue = { ...cateValue };\n    if (tempCateValue[idx]?.id !== undefined) {\n      const hasIdLength = Object.values(tempCateValue).filter(value => !!value?.id).length;\n      if (hasIdLength <= 1) {\n        alert('메뉴는 최소 1개 이여야 합니다.');\n        return;\n      }\n      const confirmDelete = deleteMenu();\n      if (!confirmDelete) {\n        return;\n      }\n      const getToken = localStorage.getItem('mydiary_token');\n      if (getToken) {\n        const config = {\n          access_token: getToken\n        };\n        const cateId = tempCateValue[idx].id;\n        console.log(cateId, 'cateId');\n        const data = { id: cateId };\n        deleteCate(config, data).then(res => {\n          if (res.status === 200 && res.data) {\n            dispatch(setCate(res.data.data));\n            const result = {};\n            res.data.data\n              ? res.data.data.forEach((item, idx) => {\n                  result[idx] = { title: item.title, id: item.id };\n                })\n              : [];\n            setCateValue(result);\n            setCateInputCount(0);\n          }\n        });\n      }\n    } else {\n      console.log('??');\n    }\n    Object.keys(cateValue).forEach(key => {\n      if (Number(key) === idx) {\n        tempCateValue[key] = undefined;\n        // console.log('in1');\n      } else if (Number(key) > idx) {\n        tempCateValue[Number(key) - 1] = cateValue[key];\n        tempCateValue[key] = undefined;\n        // console.log('in2');\n      }\n      setCateValue(tempCateValue);\n      setCateInputCount(cateInputCount - 1);\n      // console.log('in3');\n    });\n  };\n\n  const handleMenuUpdate = () => {\n    // const hasIdObj = Object.values(cateValue).filter(value => !!value?.id);\n    const hasIdArr = Object.values(cateValue).filter(obj => {\n      return obj.title === '';\n    });\n    if (hasIdArr.length > 0) {\n      alert('메뉴이름을 입력해주세요.');\n    } else {\n      // console.log(cateValue, 'arr');\n      const data = cateValue;\n      // console.log(data, 'data');\n      const getToken = localStorage.getItem('mydiary_token');\n      if (getToken) {\n        const config = {\n          access_token: getToken\n        };\n        updateCate(config, data).then(res => {\n          if (res.status === 200 && res.data) {\n            dispatch(setCate(res.data.data));\n            console.log(res.data.data, ' 변경 후');\n            const result = {};\n            res.data.data\n              ? res.data.data.forEach((item, idx) => {\n                  result[idx] = { title: item.title, id: item.id };\n                })\n              : [];\n            setCateValue(result);\n            setEdit(false);\n            setCateInputCount(0);\n            alert('변경되었습니다.');\n            console.log('변경====');\n          }\n        });\n      }\n    }\n  };\n\n  const showDeleteBtn = Object.values(cateValue).filter(value => !!value?.id).length > 1;\n\n  return (\n    <Con>\n      <CenterRow>\n        <StyledColumn>\n          <TitleRow edit={edit}>\n            <Title>\n              메뉴<TitleInfo>(최대 3개, 15글자 이하 권장) </TitleInfo>\n            </Title>\n            <EditTitle onClick={handleEditMenu}>메뉴변경</EditTitle>\n          </TitleRow>\n\n          {category &&\n            category.length > 0 &&\n            category.map((item, index) => {\n              return edit ? (\n                <MenuRow key={index}>\n                  <NumberFont>{index + 1}.</NumberFont>\n                  <Input\n                    defaultValue={item.title}\n                    name={category.length - 1}\n                    onChange={e => handleInput(index, e.target.value)}\n                    autoComplete=\"off\"\n                  />\n                </MenuRow>\n              ) : (\n                <MenuRow key={index}>\n                  <NumberFont>{index + 1}.</NumberFont>\n                  <MenuFont>{item.title}</MenuFont>\n                  {showDeleteBtn && (\n                    <CloseBtn\n                      key={index + 3}\n                      src={'/images/close.svg'}\n                      width={15}\n                      height={15}\n                      bg=\"#ddd\"\n                      radius=\"50%\"\n                      padding={2}\n                      onClick={() => handleDelete(index)}\n                    />\n                  )}\n                </MenuRow>\n              );\n            })}\n\n          {edit && (\n            <Column>\n              {cateInputCount > 0 &&\n                Array(cateInputCount)\n                  .fill('')\n                  .map((i, idx) => {\n                    const index = idx + category.length;\n                    return (\n                      <CenterLeftRow key={index}>\n                        <NumberFont>{index + 1}.</NumberFont>\n                        <Input\n                          name={index}\n                          value={cateValue[index] ? cateValue[index].title : ''}\n                          onChange={e => handleInput(e)}\n                          autoComplete=\"off\"\n                        />\n                        <CloseBtn\n                          src={'/images/close.svg'}\n                          width={15}\n                          height={15}\n                          bg=\"#ddd\"\n                          radius=\"50%\"\n                          padding={2}\n                          onClick={() => handleDelete(index)}\n                        />\n                      </CenterLeftRow>\n                    );\n                  })}\n            </Column>\n          )}\n          {edit && countCate + cateInputCount < max_category_count && (\n            <MenuRow>\n              <AddRow>\n                <AddMenuBtn onClick={increaseCateValue} userColor={userColor}>\n                  메뉴추가\n                </AddMenuBtn>\n              </AddRow>\n            </MenuRow>\n          )}\n          <Row>{edit && <SubmitBtn onClick={handleMenuUpdate}>변경</SubmitBtn>}</Row>\n        </StyledColumn>\n      </CenterRow>\n    </Con>\n  );\n}\nconst Con = styled(Container)`\n  display: flex;\n`;\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst MenuRow = styled.span`\n  width: ${props => (props.width ? `${props.width}px` : '')};\n  height: ${props => (props.height ? `${props.height}px` : '')};\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n`;\nconst AddRow = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CenterRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\nconst CenterLeftRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledColumn = styled(Column)`\n  width: 100%;\n  background: #fafafa;\n  box-sizing: border-box;\n  padding: 30px;\n`;\nconst TitleRow = styled(MenuRow)`\n  margin-bottom: 30px;\n`;\nconst Title = styled.span`\n  ${BasicTitle};\n  margin-right: 20px;\n  font-size: ${props => props.theme.mlFont};\n`;\nconst TitleInfo = styled.span`\n  color: #888;\n`;\nconst MenuFont = styled.span`\n  color: ${props => props.userColor};\n`;\nconst NumberFont = styled.span`\n  width: 33px;\n`;\nconst EditTitle = styled.span`\n  ${BlueEditBtn}\n`;\nconst AddMenuBtn = styled.button`\n  color: ${props => props.userColor};\n  border: 1px solid ${props => props.userColor};\n  border-radius: 5px;\n  width: 75px;\n  height: 33px;\n  cursor: pointer;\n  font-weight: bold;\n  margin: 20px 20px 0 33px;\n`;\nconst Input = styled.input`\n  width: 210px;\n  height: 20px;\n`;\nconst CloseBtn = styled(ImgBtn)`\n  margin-left: 10px;\n`;\nconst max_category_count = 3;\n\nconst SubmitBtn = styled.button`\n  ${BasicButton};\n  margin: 30px auto 0;\n  padding: 5px 10px;\n  font-size: ${props => props.theme.mFont};\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAHA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAUA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;;;;A","sourceRoot":""}