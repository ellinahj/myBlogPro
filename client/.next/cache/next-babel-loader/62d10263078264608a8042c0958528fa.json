{"ast":null,"code":"var _jsxFileName = \"/Users/hj/develop/myproject/myDiary/client/src/containers/mypage/EditPw.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled, { css } from 'styled-components';\nimport Container from '../../components/common/Container';\nimport { useState, useEffect } from 'react';\nimport { updatePwd, checkPwd } from '../../api/user';\nimport { theme, BlueEditBtn, BasicTitle, BasicButton } from '../../utils/theme';\nimport { Router } from 'next/router';\nexport default function ChangePwd(props) {\n  const {\n    clickEditPw,\n    showEditPw\n  } = props;\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    prevPwd: '',\n    newPwd: '',\n    newPwdCheck: ''\n  });\n  const {\n    0: prevPwdTimeout,\n    1: setPrevPwdTimeout\n  } = useState(0);\n  const {\n    0: allOk,\n    1: setAllOk\n  } = useState(false);\n  const {\n    0: newPwdState,\n    1: setNewPwdState\n  } = useState('');\n  const {\n    0: prevPwdState,\n    1: setPrevPwdState\n  } = useState('');\n  const {\n    0: newPwdCheckState,\n    1: setNewPwdCheckState\n  } = useState('');\n  const {\n    0: prevPwdTyping,\n    1: setPrevPwdTyping\n  } = useState(false);\n  const regex = /^.*(?=^.{6,15}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[!@#$%^&+=]).*$/;\n\n  const handlePrevPwd = e => {\n    const nextValue = {\n      [e.target.name]: e.target.value\n    };\n    setValue(_objectSpread({}, value, {}, nextValue));\n    prevPwdTimeout && clearTimeout(prevPwdTimeout);\n    const timer = setTimeout(() => {\n      console.log('e');\n      const getToken = localStorage.getItem('mydiary_token');\n\n      if (getToken) {\n        const config = {\n          access_token: getToken\n        };\n        const data = {\n          pwd: nextValue.prevPwd\n        };\n        checkPwd(config, data).then(res => {\n          console.log(res, 'res');\n\n          if (res.status === 200) {\n            console.log('in');\n            setPrevPwdTyping(true);\n            setPrevPwdState(true);\n          }\n        }).catch(err => {\n          if (err.response.status === 401) {\n            setPrevPwdTyping(true);\n            setPrevPwdState(false);\n          }\n        });\n      }\n    }, 2500);\n    setPrevPwdTimeout(timer);\n  };\n\n  const handleNewPwd = e => {\n    setValue(_objectSpread({}, value, {\n      newPwd: e.target.value\n    }));\n\n    if (!regex.test(e.target.value)) {\n      console.log('false');\n      setNewPwdState(false);\n    } else {\n      console.log('true');\n      setNewPwdState(true);\n    }\n  };\n\n  const handleNewPwdCheck = e => {\n    setValue(_objectSpread({}, value, {\n      newPwdCheck: e.target.value\n    }));\n\n    if (newPwdState && value.newPwd === e.target.value) {\n      setNewPwdCheckState(true);\n    } else {\n      setNewPwdCheckState(false);\n    }\n  };\n\n  useEffect(() => {\n    if (prevPwdState && newPwdCheckState) {\n      setAllOk(true);\n    }\n  }, [newPwdCheckState]);\n\n  const handleSubmit = () => {\n    //최종 변경\n    const getToken = localStorage.getItem('mydiary_token');\n\n    if (getToken) {\n      const config = {\n        access_token: getToken\n      };\n      const data = value;\n      console.log(value, 'last value');\n      updatePwd(config, data).then(res => {\n        if (res.status === 200 && res.data) {\n          alert('변경되었습니다.');\n          Router.push('/mypage');\n        }\n      });\n    }\n  };\n\n  return __jsx(Con, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(TopCon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(MainTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(PwEdit, {\n    onClick: e => clickEditPw(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uBCC0\\uACBD\")), showEditPw && __jsx(React.Fragment, null, __jsx(MarginTopRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, \"\\uC774\\uC804\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(Input, {\n    type: \"password\",\n    name: \"prevPwd\",\n    value: value.prevPwd,\n    onChange: e => handlePrevPwd(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  })), prevPwdTyping && (prevPwdState ? __jsx(Match, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 51\n    }\n  }, \"\\uC77C\\uCE58\") : __jsx(Mismatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 71\n    }\n  }, \"\\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(MarginRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"\\uC0C8\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(Input, {\n    type: \"password\",\n    name: \"newPwd\",\n    value: value.newPwd,\n    onChange: e => handleNewPwd(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  })), !newPwdState ? __jsx(Mismatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, \"\\uC601\\uBB38,\\uC22B\\uC790,\\uD2B9\\uC218\\uBB38\\uC790\\uD3EC\\uD568 6~15\\uC790\\uB9AC\\uB85C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\") : '', __jsx(MarginRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"\\uC0C8\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), __jsx(Input, {\n    type: \"password\",\n    name: \"newPwdCheck\",\n    value: value.newPwdCheck,\n    onChange: e => handleNewPwdCheck(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  })), newPwdState && value.newPwdCheck && value.newPwdCheck.length > 0 && (newPwdCheckState ? __jsx(Match, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 39\n    }\n  }, \"\\uC77C\\uCE58\") : __jsx(Mismatch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 59\n    }\n  }, \"\\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, __jsx(SubmitBtn, {\n    disabled: !newPwdCheckState,\n    allOk: allOk,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, \"\\uBCC0\\uACBD\")))))));\n}\nconst Con = styled(Container).withConfig({\n  displayName: \"EditPw__Con\",\n  componentId: \"sc-1b9aah4-0\"\n})([\"display:flex;justify-content:center;\"]);\nconst Column = styled.div.withConfig({\n  displayName: \"EditPw__Column\",\n  componentId: \"sc-1b9aah4-1\"\n})([\"display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;\"]);\nconst Row = styled.div.withConfig({\n  displayName: \"EditPw__Row\",\n  componentId: \"sc-1b9aah4-2\"\n})([\"display:flex;width:100%;\"]);\nconst MarginRow = styled(Row).withConfig({\n  displayName: \"EditPw__MarginRow\",\n  componentId: \"sc-1b9aah4-3\"\n})([\"margin-top:20px;\"]);\nconst MarginTopRow = styled(Row).withConfig({\n  displayName: \"EditPw__MarginTopRow\",\n  componentId: \"sc-1b9aah4-4\"\n})([\"margin-top:40px;\"]);\nconst Title = styled.div.withConfig({\n  displayName: \"EditPw__Title\",\n  componentId: \"sc-1b9aah4-5\"\n})([\"\", \";width:120px;\"], BasicTitle);\nconst MainTitle = styled(Title).withConfig({\n  displayName: \"EditPw__MainTitle\",\n  componentId: \"sc-1b9aah4-6\"\n})([\"font-size:\", \";\"], props => props.theme.mlFont);\nconst TopCon = styled.div.withConfig({\n  displayName: \"EditPw__TopCon\",\n  componentId: \"sc-1b9aah4-7\"\n})([\"width:100%;background:#fafafa;padding:30px;\"]);\nconst SubmitBtn = styled.button.withConfig({\n  displayName: \"EditPw__SubmitBtn\",\n  componentId: \"sc-1b9aah4-8\"\n})([\"color:#aaa;margin:30px auto 0;padding:5px 10px;font-size:\", \";\", \"\"], theme.mFont, props => props.allOk && css([\"color:#111;cursor:pointer;\"]));\nconst Input = styled.input.withConfig({\n  displayName: \"EditPw__Input\",\n  componentId: \"sc-1b9aah4-9\"\n})([\"width:150px;height:20px;\"]);\nconst PwEdit = styled.div.withConfig({\n  displayName: \"EditPw__PwEdit\",\n  componentId: \"sc-1b9aah4-10\"\n})([\"\", \"\"], BlueEditBtn);\nconst Match = styled.div.withConfig({\n  displayName: \"EditPw__Match\",\n  componentId: \"sc-1b9aah4-11\"\n})([\"color:\", \";margin:10px 0 0 0;font-size:\", \";display:flex;align-items:center;\"], theme.greenFont, theme.sFont);\nconst Mismatch = styled.div.withConfig({\n  displayName: \"EditPw__Mismatch\",\n  componentId: \"sc-1b9aah4-12\"\n})([\"color:\", \";margin:10px 0 0 0;font-size:\", \";display:flex;align-items:center;\"], theme.redFont, theme.sFont);","map":{"version":3,"sources":["/Users/hj/develop/myproject/myDiary/client/src/containers/mypage/EditPw.js"],"names":["styled","css","Container","useState","useEffect","updatePwd","checkPwd","theme","BlueEditBtn","BasicTitle","BasicButton","Router","ChangePwd","props","clickEditPw","showEditPw","value","setValue","prevPwd","newPwd","newPwdCheck","prevPwdTimeout","setPrevPwdTimeout","allOk","setAllOk","newPwdState","setNewPwdState","prevPwdState","setPrevPwdState","newPwdCheckState","setNewPwdCheckState","prevPwdTyping","setPrevPwdTyping","regex","handlePrevPwd","e","nextValue","target","name","clearTimeout","timer","setTimeout","console","log","getToken","localStorage","getItem","config","access_token","data","pwd","then","res","status","catch","err","response","handleNewPwd","test","handleNewPwdCheck","handleSubmit","alert","push","length","Con","Column","div","Row","MarginRow","MarginTopRow","Title","MainTitle","mlFont","TopCon","SubmitBtn","button","mFont","Input","input","PwEdit","Match","greenFont","sFont","Mismatch","redFont"],"mappings":"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","sourcesContent":["import styled, { css } from 'styled-components';\nimport Container from '../../components/common/Container';\nimport { useState, useEffect } from 'react';\nimport { updatePwd, checkPwd } from '../../api/user';\nimport { theme, BlueEditBtn, BasicTitle, BasicButton } from '../../utils/theme';\nimport { Router } from 'next/router';\nexport default function ChangePwd(props) {\n  const { clickEditPw, showEditPw } = props;\n  const [value, setValue] = useState({ prevPwd: '', newPwd: '', newPwdCheck: '' });\n  const [prevPwdTimeout, setPrevPwdTimeout] = useState(0);\n  const [allOk, setAllOk] = useState(false);\n  const [newPwdState, setNewPwdState] = useState('');\n  const [prevPwdState, setPrevPwdState] = useState('');\n  const [newPwdCheckState, setNewPwdCheckState] = useState('');\n  const [prevPwdTyping, setPrevPwdTyping] = useState(false);\n  const regex = /^.*(?=^.{6,15}$)(?=.*\\d)(?=.*[a-zA-Z])(?=.*[!@#$%^&+=]).*$/;\n\n  const handlePrevPwd = e => {\n    const nextValue = { [e.target.name]: e.target.value };\n    setValue({ ...value, ...nextValue });\n    prevPwdTimeout && clearTimeout(prevPwdTimeout);\n    const timer = setTimeout(() => {\n      console.log('e');\n      const getToken = localStorage.getItem('mydiary_token');\n      if (getToken) {\n        const config = {\n          access_token: getToken\n        };\n        const data = { pwd: nextValue.prevPwd };\n        checkPwd(config, data)\n          .then(res => {\n            console.log(res, 'res');\n            if (res.status === 200) {\n              console.log('in');\n              setPrevPwdTyping(true);\n              setPrevPwdState(true);\n            }\n          })\n          .catch(err => {\n            if (err.response.status === 401) {\n              setPrevPwdTyping(true);\n              setPrevPwdState(false);\n            }\n          });\n      }\n    }, 2500);\n    setPrevPwdTimeout(timer);\n  };\n\n  const handleNewPwd = e => {\n    setValue({ ...value, newPwd: e.target.value });\n    if (!regex.test(e.target.value)) {\n      console.log('false');\n      setNewPwdState(false);\n    } else {\n      console.log('true');\n      setNewPwdState(true);\n    }\n  };\n\n  const handleNewPwdCheck = e => {\n    setValue({ ...value, newPwdCheck: e.target.value });\n    if (newPwdState && value.newPwd === e.target.value) {\n      setNewPwdCheckState(true);\n    } else {\n      setNewPwdCheckState(false);\n    }\n  };\n\n  useEffect(() => {\n    if (prevPwdState && newPwdCheckState) {\n      setAllOk(true);\n    }\n  }, [newPwdCheckState]);\n\n  const handleSubmit = () => {\n    //최종 변경\n    const getToken = localStorage.getItem('mydiary_token');\n    if (getToken) {\n      const config = {\n        access_token: getToken\n      };\n      const data = value;\n      console.log(value, 'last value');\n      updatePwd(config, data).then(res => {\n        if (res.status === 200 && res.data) {\n          alert('변경되었습니다.');\n          Router.push('/mypage');\n        }\n      });\n    }\n  };\n  return (\n    <Con>\n      <Column>\n        <Row>\n          <TopCon>\n            <Row>\n              <MainTitle>비밀번호</MainTitle>\n              <PwEdit onClick={e => clickEditPw(e)}>비밀번호변경</PwEdit>\n            </Row>\n\n            {showEditPw && (\n              <>\n                <MarginTopRow>\n                  <Title>이전비밀번호</Title>\n                  <Input type=\"password\" name=\"prevPwd\" value={value.prevPwd} onChange={e => handlePrevPwd(e)} />\n                </MarginTopRow>\n\n                {prevPwdTyping && (prevPwdState ? <Match>일치</Match> : <Mismatch>일치하지 않습니다.</Mismatch>)}\n                <MarginRow>\n                  <Title>새비밀번호</Title>\n                  <Input type=\"password\" name=\"newPwd\" value={value.newPwd} onChange={e => handleNewPwd(e)} />\n                </MarginRow>\n                {!newPwdState ? <Mismatch>영문,숫자,특수문자포함 6~15자리로 입력해주세요.</Mismatch> : ''}\n\n                <MarginRow>\n                  <Title>새비밀번호 확인</Title>\n                  <Input\n                    type=\"password\"\n                    name=\"newPwdCheck\"\n                    value={value.newPwdCheck}\n                    onChange={e => handleNewPwdCheck(e)}\n                  />\n                </MarginRow>\n                {newPwdState &&\n                  value.newPwdCheck &&\n                  value.newPwdCheck.length > 0 &&\n                  (newPwdCheckState ? <Match>일치</Match> : <Mismatch>일치하지 않습니다.</Mismatch>)}\n                <Row>\n                  <SubmitBtn disabled={!newPwdCheckState} allOk={allOk} onClick={handleSubmit}>\n                    변경\n                  </SubmitBtn>\n                </Row>\n              </>\n            )}\n          </TopCon>\n        </Row>\n      </Column>\n    </Con>\n  );\n}\nconst Con = styled(Container)`\n  display: flex;\n  justify-content: center;\n`;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst MarginRow = styled(Row)`\n  margin-top: 20px;\n`;\nconst MarginTopRow = styled(Row)`\n  margin-top: 40px;\n`;\nconst Title = styled.div`\n  ${BasicTitle};\n  width: 120px;\n`;\nconst MainTitle = styled(Title)`\n  font-size: ${props => props.theme.mlFont};\n`;\nconst TopCon = styled.div`\n  width: 100%;\n  background: #fafafa;\n  padding: 30px;\n`;\nconst SubmitBtn = styled.button`\n  color: #aaa;\n  margin: 30px auto 0;\n  padding: 5px 10px;\n  font-size: ${theme.mFont};\n  ${props =>\n    props.allOk &&\n    css`\n      color: #111;\n      cursor: pointer;\n    `}\n`;\nconst Input = styled.input`\n  width: 150px;\n  height: 20px;\n`;\nconst PwEdit = styled.div`\n  ${BlueEditBtn}\n`;\nconst Match = styled.div`\n  color: ${theme.greenFont};\n  margin: 10px 0 0 0;\n  font-size: ${theme.sFont};\n  display: flex;\n  align-items: center;\n`;\nconst Mismatch = styled.div`\n  color: ${theme.redFont};\n  margin: 10px 0 0 0;\n  font-size: ${theme.sFont};\n  display: flex;\n  align-items: center;\n`;\n"]},"metadata":{},"sourceType":"module"}