{"ast":null,"code":"var _jsxFileName = \"/Users/hj/develop/myproject/myDiary/client/src/components/blog/ThreePhotoUpload.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { css } from 'styled-components';\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { theme } from '../../utils/theme';\nexport default function Upload(props) {\n  const {\n    imgFormData\n  } = props;\n  const {\n    0: file,\n    1: setFile\n  } = useState([null, null, null]);\n  const {\n    0: upImg,\n    1: setUpImg\n  } = useState([]);\n  const {\n    0: crop,\n    1: setCrop\n  } = useState({\n    unit: '%',\n    width: 100,\n    aspect: 1\n  });\n  const {\n    0: previewUrl,\n    1: setPreviewUrl\n  } = useState([null, null, null]);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(null);\n  const {\n    0: filename,\n    1: setFilename\n  } = useState('');\n  const {\n    0: fileInfo,\n    1: setFileInfo\n  } = useState('');\n  const imgRef = useRef(null);\n  let inputRefs = useRef([]);\n\n  const controlFileBtn = (e, index) => {\n    e.preventDefault();\n    inputRefs.current[index].click();\n  };\n\n  const addImg = (e, index) => {\n    setIndex(index);\n\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n      setFileInfo(e.target.files[0].type);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      createCropPreview(imgRef.current, crop, filename);\n    }\n  };\n\n  const createCropPreview = async (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n\n        blob.name = fileName;\n        window.URL.revokeObjectURL(previewUrl);\n        const tempPreviewUrl = [...previewUrl];\n        tempPreviewUrl.splice(index, 1, window.URL.createObjectURL(blob));\n        setPreviewUrl(tempPreviewUrl);\n        const blobToFile = new File([blob], filename);\n        const tempFile = [...file];\n        tempFile.splice(index, 1, blobToFile);\n        setFile(tempFile);\n      }, fileInfo);\n    }).catch(err => {\n      console.log('blob promise err', err);\n    });\n  };\n\n  useEffect(() => {\n    imgFormData(file);\n  }, [file]);\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(EditFont, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"\\uD3B8\\uC9D1\"), __jsx(ReactCropDiv, {\n    src: upImg,\n    onImageLoaded: onLoad,\n    crop: crop,\n    onChange: c => setCrop(c),\n    onComplete: makeClientCrop,\n    uploadImg: upImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), __jsx(ImageRow, {\n    existImg: previewUrl && previewUrl[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(AddBtn, {\n    name: \"button\",\n    onClick: e => controlFileBtn(e, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"\\uC0AC\\uC9C41\"), __jsx(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    accept: \"image/*\",\n    ref: ref => inputRefs.current[0] = ref,\n    style: {\n      display: 'none'\n    },\n    onChange: e => addImg(e, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), previewUrl && previewUrl[0] && __jsx(PreviewImg, {\n    src: previewUrl[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 41\n    }\n  }), previewUrl && previewUrl[0] && __jsx(PhotoName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 41\n    }\n  }, \"\\uC0AC\\uC9C41\")), __jsx(ImageRow, {\n    existImg: previewUrl && previewUrl[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, __jsx(AddBtn, {\n    name: \"button\",\n    onClick: e => controlFileBtn(e, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"\\uC0AC\\uC9C42\"), __jsx(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    accept: \"image/*\",\n    ref: ref => inputRefs.current[1] = ref,\n    style: {\n      display: 'none'\n    },\n    onChange: e => addImg(e, 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), previewUrl && previewUrl[1] && __jsx(PreviewImg, {\n    src: previewUrl[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 41\n    }\n  }), previewUrl && previewUrl[1] && __jsx(PhotoName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, \"\\uC0AC\\uC9C42\")), __jsx(ImageRow, {\n    existImg: previewUrl && previewUrl[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(AddBtn, {\n    type: \"button\",\n    name: \"file\",\n    onClick: e => controlFileBtn(e, 2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"\\uC0AC\\uC9C43\"), __jsx(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    accept: \"image/*\",\n    ref: ref => inputRefs.current[2] = ref,\n    style: {\n      display: 'none'\n    },\n    onChange: e => addImg(e, 2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), previewUrl && previewUrl[2] && __jsx(PreviewImg, {\n    src: previewUrl[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }), previewUrl && previewUrl[2] && __jsx(PhotoName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, \"\\uC0AC\\uC9C43\")));\n}\nconst AddBtn = styled.button.withConfig({\n  displayName: \"ThreePhotoUpload__AddBtn\",\n  componentId: \"k92afb-0\"\n})([\"cursor:pointer;padding:4px 8px;margin-bottom:5px;width:fit-content;\"]);\nconst Row = styled.div.withConfig({\n  displayName: \"ThreePhotoUpload__Row\",\n  componentId: \"k92afb-1\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;\"]);\nconst PreviewImg = styled.img.withConfig({\n  displayName: \"ThreePhotoUpload__PreviewImg\",\n  componentId: \"k92afb-2\"\n})([\"width:100%;\"]);\nconst ImageRow = styled.div.withConfig({\n  displayName: \"ThreePhotoUpload__ImageRow\",\n  componentId: \"k92afb-3\"\n})([\"display:flex;flex-direction:column;margin-bottom:\", \";\"], props => props.existImg && '30px');\nconst ReactCropDiv = styled(ReactCrop).withConfig({\n  displayName: \"ThreePhotoUpload__ReactCropDiv\",\n  componentId: \"k92afb-4\"\n})([\"border:\", \";margin-bottom:\", \";\"], props => props.uploadImg.length > 0 ? '2px solid #ff254f' : 'none', props => props.uploadImg.length > 0 ? '40px' : '0px');\nconst PhotoName = styled.div.withConfig({\n  displayName: \"ThreePhotoUpload__PhotoName\",\n  componentId: \"k92afb-5\"\n})([\"font-size:15px;margin-top:5px;\"]);\nconst EditFont = styled.div.withConfig({\n  displayName: \"ThreePhotoUpload__EditFont\",\n  componentId: \"k92afb-6\"\n})([\"\"]);","map":{"version":3,"sources":["/Users/hj/develop/myproject/myDiary/client/src/components/blog/ThreePhotoUpload.js"],"names":["styled","css","useState","useRef","useCallback","useEffect","ReactCrop","theme","Upload","props","imgFormData","file","setFile","upImg","setUpImg","crop","setCrop","unit","width","aspect","previewUrl","setPreviewUrl","index","setIndex","filename","setFilename","fileInfo","setFileInfo","imgRef","inputRefs","controlFileBtn","e","preventDefault","current","click","addImg","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","name","type","onLoad","img","makeClientCrop","height","createCropPreview","image","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","Error","window","URL","revokeObjectURL","tempPreviewUrl","splice","createObjectURL","blobToFile","File","tempFile","catch","err","console","log","c","ref","display","AddBtn","button","Row","div","PreviewImg","ImageRow","existImg","ReactCropDiv","uploadImg","PhotoName","EditFont"],"mappings":"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","sourcesContent":["import styled, { css } from 'styled-components';\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { theme } from '../../utils/theme';\n\nexport default function Upload(props) {\n  const { imgFormData } = props;\n  const [file, setFile] = useState([null, null, null]);\n  const [upImg, setUpImg] = useState([]);\n  const [crop, setCrop] = useState({ unit: '%', width: 100, aspect: 1 });\n  const [previewUrl, setPreviewUrl] = useState([null, null, null]);\n  const [index, setIndex] = useState(null);\n  const [filename, setFilename] = useState('');\n  const [fileInfo, setFileInfo] = useState('');\n  const imgRef = useRef(null);\n\n  let inputRefs = useRef([]);\n  const controlFileBtn = (e, index) => {\n    e.preventDefault();\n    inputRefs.current[index].click();\n  };\n\n  const addImg = (e, index) => {\n    setIndex(index);\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n      setFileInfo(e.target.files[0].type);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      createCropPreview(imgRef.current, crop, filename);\n    }\n  };\n\n  const createCropPreview = async (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n        blob.name = fileName;\n        window.URL.revokeObjectURL(previewUrl);\n        const tempPreviewUrl = [...previewUrl];\n        tempPreviewUrl.splice(index, 1, window.URL.createObjectURL(blob));\n        setPreviewUrl(tempPreviewUrl);\n        const blobToFile = new File([blob], filename);\n        const tempFile = [...file];\n        tempFile.splice(index, 1, blobToFile);\n        setFile(tempFile);\n      }, fileInfo);\n    }).catch(err => {\n      console.log('blob promise err', err);\n    });\n  };\n  useEffect(() => {\n    imgFormData(file);\n  }, [file]);\n\n  return (\n    <Row>\n      <Row>\n        <EditFont>편집</EditFont>\n        <ReactCropDiv\n          src={upImg}\n          onImageLoaded={onLoad}\n          crop={crop}\n          onChange={c => setCrop(c)}\n          onComplete={makeClientCrop}\n          uploadImg={upImg}\n        />\n      </Row>\n      <ImageRow existImg={previewUrl && previewUrl[0]}>\n        <AddBtn name=\"button\" onClick={e => controlFileBtn(e, 0)}>\n          사진1\n        </AddBtn>\n        <input\n          name=\"file\"\n          type=\"file\"\n          accept=\"image/*\"\n          ref={ref => (inputRefs.current[0] = ref)}\n          style={{ display: 'none' }}\n          onChange={e => addImg(e, 0)}\n        />\n        {previewUrl && previewUrl[0] && <PreviewImg src={previewUrl[0]} />}\n        {previewUrl && previewUrl[0] && <PhotoName>사진1</PhotoName>}\n      </ImageRow>\n      <ImageRow existImg={previewUrl && previewUrl[1]}>\n        <AddBtn name=\"button\" onClick={e => controlFileBtn(e, 1)}>\n          사진2\n        </AddBtn>\n        <input\n          name=\"file\"\n          type=\"file\"\n          accept=\"image/*\"\n          ref={ref => (inputRefs.current[1] = ref)}\n          style={{ display: 'none' }}\n          onChange={e => addImg(e, 1)}\n        />\n        {previewUrl && previewUrl[1] && <PreviewImg src={previewUrl[1]} />}\n        {previewUrl && previewUrl[1] && <PhotoName>사진2</PhotoName>}\n      </ImageRow>\n      <ImageRow existImg={previewUrl && previewUrl[2]}>\n        <AddBtn type=\"button\" name=\"file\" onClick={e => controlFileBtn(e, 2)}>\n          사진3\n        </AddBtn>\n        <input\n          name=\"file\"\n          type=\"file\"\n          accept=\"image/*\"\n          ref={ref => (inputRefs.current[2] = ref)}\n          style={{ display: 'none' }}\n          onChange={e => addImg(e, 2)}\n        />\n\n        {previewUrl && previewUrl[2] && <PreviewImg src={previewUrl[2]} />}\n        {previewUrl && previewUrl[2] && <PhotoName>사진3</PhotoName>}\n      </ImageRow>\n      {/* <button type=\"button\" onClick={submitImg}>\n        사진전송\n      </button> */}\n    </Row>\n  );\n}\nconst AddBtn = styled.button`\n  cursor: pointer;\n  padding: 4px 8px;\n  margin-bottom: 5px;\n  width: fit-content;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst PreviewImg = styled.img`\n  width: 100%;\n`;\nconst ImageRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${props => props.existImg && '30px'};\n`;\nconst ReactCropDiv = styled(ReactCrop)`\n  border: ${props => (props.uploadImg.length > 0 ? '2px solid #ff254f' : 'none')};\n  margin-bottom: ${props => (props.uploadImg.length > 0 ? '40px' : '0px')};\n`;\nconst PhotoName = styled.div`\n  font-size: 15px;\n  margin-top: 5px;\n`;\nconst EditFont = styled.div``;\n"]},"metadata":{},"sourceType":"module"}