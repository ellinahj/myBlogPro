{"ast":null,"code":"var _jsxFileName = \"/Users/hj/develop/myproject/myDiary/client/src/components/mypage/ThemeChange.js\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setThemeColor } from '../../actions/base';\nimport ChromePicker from 'react-color';\nexport default function ThemeChange(props) {\n  var handleThemeChange = props.handleThemeChange;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      openPicker = _useState[0],\n      setOpenPicker = _useState[1];\n\n  var themeButton = useRef(null);\n  var userColor = useSelector(function (state) {\n    return state.common.userColor;\n  });\n  var popover = {\n    position: 'absolute',\n    // right: '30px',\n    zIndex: '2'\n  };\n  var cover = {\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px'\n  };\n\n  var handlePickComplete = function handlePickComplete(color) {\n    color.rgb.a = 0.2;\n    var changeRgb = color.rgb;\n    dispatch(setThemeColor(color.hex));\n  };\n\n  var handleClick = function handleClick() {\n    setOpenPicker(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpenPicker(false);\n  };\n\n  useEffect(function () {\n    //입력창 밖 선택 시 검색내역창 감추기\n    function handleClickOutside(e) {\n      if (themeButton.current && !themeButton.current.contains(e.target)) {\n        handleClose();\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return __jsx(Con, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(WidthDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(ThemeButton, {\n    onClick: handleClick,\n    userColor: userColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"\\uD14C\\uB9C8\\uBCC0\\uACBD\")), openPicker ? __jsx(\"div\", {\n    style: popover,\n    ref: themeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: cover,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(ChromePicker, {\n    color: userColor,\n    onChangeComplete: handlePickComplete,\n    disableAlpha: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })) : null, __jsx(ColorBox, {\n    userColor: userColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\nvar Con = styled.div.withConfig({\n  displayName: \"ThemeChange__Con\",\n  componentId: \"sc-1vtxb22-0\"\n})([\"display:flex;align-items:center;\"]);\nvar WidthDiv = styled.div.withConfig({\n  displayName: \"ThemeChange__WidthDiv\",\n  componentId: \"sc-1vtxb22-1\"\n})([\"width:120px;\"]);\nvar ThemeButton = styled.button.withConfig({\n  displayName: \"ThemeChange__ThemeButton\",\n  componentId: \"sc-1vtxb22-2\"\n})([\"width:80px;height:33px;display:flex;align-items:center;justify-content:center;border-radius:10px;outline:none;cursor:pointer;border:1px solid \", \";color:\", \";background:#fff;\"], function (props) {\n  return props.userColor;\n}, function (props) {\n  return props.userColor;\n});\nvar ColorBox = styled.div.withConfig({\n  displayName: \"ThemeChange__ColorBox\",\n  componentId: \"sc-1vtxb22-3\"\n})([\"width:30px;height:30px;border-radius:10px;background:\", \";\"], function (props) {\n  return props.userColor;\n});","map":{"version":3,"sources":["/Users/hj/develop/myproject/myDiary/client/src/components/mypage/ThemeChange.js"],"names":["styled","React","useState","useEffect","useRef","useSelector","useDispatch","setThemeColor","ChromePicker","ThemeChange","props","handleThemeChange","dispatch","openPicker","setOpenPicker","themeButton","userColor","state","common","popover","position","zIndex","cover","top","right","bottom","left","handlePickComplete","color","rgb","a","changeRgb","hex","handleClick","handleClose","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","Con","div","WidthDiv","ThemeButton","button","ColorBox"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setThemeColor } from '../../actions/base';\nimport ChromePicker from 'react-color';\nexport default function ThemeChange(props) {\n  const { handleThemeChange } = props;\n  const dispatch = useDispatch();\n  const [openPicker, setOpenPicker] = useState(false);\n  const themeButton = useRef(null);\n  const userColor = useSelector(state => state.common.userColor);\n\n  const popover = {\n    position: 'absolute',\n    // right: '30px',\n    zIndex: '2'\n  };\n  const cover = {\n    top: '0px',\n    right: '0px',\n    bottom: '0px',\n    left: '0px'\n  };\n  const handlePickComplete = color => {\n    color.rgb.a = 0.2;\n    const changeRgb = color.rgb;\n    dispatch(setThemeColor(color.hex));\n  };\n  const handleClick = () => {\n    setOpenPicker(true);\n  };\n  const handleClose = () => {\n    setOpenPicker(false);\n  };\n\n  useEffect(() => {\n    //입력창 밖 선택 시 검색내역창 감추기\n    function handleClickOutside(e) {\n      if (themeButton.current && !themeButton.current.contains(e.target)) {\n        handleClose();\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return (\n    <Con>\n      <WidthDiv>\n        <ThemeButton onClick={handleClick} userColor={userColor}>\n          테마변경\n        </ThemeButton>\n      </WidthDiv>\n      {openPicker ? (\n        <div style={popover} ref={themeButton}>\n          <div style={cover} onClick={handleClose} />\n          <ChromePicker color={userColor} onChangeComplete={handlePickComplete} disableAlpha={true} />\n        </div>\n      ) : null}\n      <ColorBox userColor={userColor} />\n    </Con>\n  );\n}\nconst Con = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst WidthDiv = styled.div`\n  width: 120px;\n`;\nconst ThemeButton = styled.button`\n  width: 80px;\n  height: 33px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  outline: none;\n  cursor: pointer;\n  border: 1px solid ${props => props.userColor};\n  color: ${props => props.userColor};\n  background: #fff;\n`;\n\nconst ColorBox = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 10px;\n  background: ${props => props.userColor};\n`;\n"]},"metadata":{},"sourceType":"module"}