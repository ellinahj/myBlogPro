{"ast":null,"code":"var _jsxFileName = \"/Users/hj/develop/myproject/myDiary/client/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport store from '../src/store';\nimport { theme } from '../src/utils/theme';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nconst GlobalStyle = createGlobalStyle`\n\n  html{\n        width:100%;\n        height:100%;\n  };\n  body{\n        margin:0;\n        padding:0;\n        width:100%;\n        height:100%;\n        position: relative;\n        font-family: ${props => props.currentValue};\n        font-size:${props => props.theme.mFont};\n        background:#fcfcfc;\n\n  };\n  #__next{  \n            max-width:767px;\n            min-height:100%;\n            box-sizing:border-box;\n            margin: 0 auto;\n            border-left: 1px solid #dedede;\n            border-right: 1px solid #dedede;\n            background: #fff;\n  };\n  a {\n      text-decoration:none; \n      outline:none;        \n  };\n  ul{\n      list-style:none;\n  };\n  button{\n    font-family: ${props => props.selectFont};\n    :hover {\n    opacity: 1;\n    }\n  }\n  ::-webkit-input-placeholder {\n    font-family: ${props => props.selectFont};\n}\ninput{\n  font-family: ${props => props.selectFont};\n  font-size:${props => props.theme.mFont};\n}\ntextarea{\n  font-family: ${props => props.currentValue};\n  font-size:${props => props.theme.mFont};\n}\n`;\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: currentColor,\n    1: setCurrentColor\n  } = useState('#ff254f');\n  const {\n    0: currentValue,\n    1: setCurrentValue\n  } = useState(`'Noto Sans KR', sans-serifo'`);\n  useEffect(() => {\n    function handleSubscribe() {\n      const newColor = store.getState().common.userColor;\n\n      if (newColor !== currentColor) {\n        setCurrentColor(newColor);\n      }\n    }\n\n    const subscribeStore = store.subscribe(handleSubscribe);\n    return () => subscribeStore();\n  }, [currentColor]);\n\n  function select(state) {\n    console.log(state.common, 'state,common');\n    return state.common.selectFont;\n  }\n\n  useEffect(() => {\n    function handleChange() {\n      // let newValue = currentValue;\n      const newValue = store.getState().common.selectFont;\n\n      if (newValue !== currentValue) {\n        setCurrentValue(newValue);\n        console.log('Some deep nested property changed from', newValue, 'to', currentValue);\n      }\n    }\n\n    const unsubscribe = store.subscribe(handleChange);\n    return () => unsubscribe();\n  }, [currentValue]);\n  return __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(GlobalStyle, {\n    theme: theme,\n    userTheme: currentColor,\n    currentValue: currentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), __jsx(ThemeProvider, {\n    theme: theme,\n    userColor: currentColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/hj/develop/myproject/myDiary/client/pages/_app.js"],"names":["React","useEffect","useState","createGlobalStyle","ThemeProvider","Provider","store","theme","GlobalStyle","props","currentValue","mFont","selectFont","MyApp","Component","pageProps","currentColor","setCurrentColor","setCurrentValue","handleSubscribe","newColor","getState","common","userColor","subscribeStore","subscribe","select","state","console","log","handleChange","newValue","unsubscribe"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport store from '../src/store';\nimport { theme } from '../src/utils/theme';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst GlobalStyle = createGlobalStyle`\n\n  html{\n        width:100%;\n        height:100%;\n  };\n  body{\n        margin:0;\n        padding:0;\n        width:100%;\n        height:100%;\n        position: relative;\n        font-family: ${props => props.currentValue};\n        font-size:${props => props.theme.mFont};\n        background:#fcfcfc;\n\n  };\n  #__next{  \n            max-width:767px;\n            min-height:100%;\n            box-sizing:border-box;\n            margin: 0 auto;\n            border-left: 1px solid #dedede;\n            border-right: 1px solid #dedede;\n            background: #fff;\n  };\n  a {\n      text-decoration:none; \n      outline:none;        \n  };\n  ul{\n      list-style:none;\n  };\n  button{\n    font-family: ${props => props.selectFont};\n    :hover {\n    opacity: 1;\n    }\n  }\n  ::-webkit-input-placeholder {\n    font-family: ${props => props.selectFont};\n}\ninput{\n  font-family: ${props => props.selectFont};\n  font-size:${props => props.theme.mFont};\n}\ntextarea{\n  font-family: ${props => props.currentValue};\n  font-size:${props => props.theme.mFont};\n}\n`;\n\nexport default function MyApp({ Component, pageProps }) {\n  const [currentColor, setCurrentColor] = useState('#ff254f');\n  const [currentValue, setCurrentValue] = useState(`'Noto Sans KR', sans-serifo'`);\n\n  useEffect(() => {\n    function handleSubscribe() {\n      const newColor = store.getState().common.userColor;\n      if (newColor !== currentColor) {\n        setCurrentColor(newColor);\n      }\n    }\n    const subscribeStore = store.subscribe(handleSubscribe);\n    return () => subscribeStore();\n  }, [currentColor]);\n\n  function select(state) {\n    console.log(state.common, 'state,common');\n    return state.common.selectFont;\n  }\n\n  useEffect(() => {\n    function handleChange() {\n      // let newValue = currentValue;\n      const newValue = store.getState().common.selectFont;\n\n      if (newValue !== currentValue) {\n        setCurrentValue(newValue);\n        console.log('Some deep nested property changed from', newValue, 'to', currentValue);\n      }\n    }\n\n    const unsubscribe = store.subscribe(handleChange);\n    return () => unsubscribe();\n  }, [currentValue]);\n\n  return (\n    <Provider store={store}>\n      <GlobalStyle theme={theme} userTheme={currentColor} currentValue={currentValue} />\n      <ThemeProvider theme={theme} userColor={currentColor}>\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}