{"ast":null,"code":"var _jsxFileName = \"/Users/hj/develop/myproject/myDiary/client/src/components/common/PhotoUpload.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { css } from 'styled-components';\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ReactCrop from 'react-image-crop';\nimport { BlueEditBtn } from '../../utils/theme';\nexport default function Upload(props) {\n  const {\n    imgFormData,\n    prevImg,\n    showEdit,\n    clickEdit\n  } = props;\n  const {\n    0: file,\n    1: setFile\n  } = useState([null]);\n  const {\n    0: upImg,\n    1: setUpImg\n  } = useState([]);\n  const {\n    0: crop,\n    1: setCrop\n  } = useState({\n    unit: '%',\n    width: 100,\n    aspect: 1\n  });\n  const {\n    0: previewUrl,\n    1: setPreviewUrl\n  } = useState([null]);\n  const {\n    0: index,\n    1: setIndex\n  } = useState(null);\n  const {\n    0: filename,\n    1: setFilename\n  } = useState('');\n  const {\n    0: fileInfo,\n    1: setFileInfo\n  } = useState('');\n  const imgRef = useRef(null);\n  const userColor = useSelector(state => state.common.userColor);\n  const userInfo = useSelector(state => state.common.userInfo);\n  let inputRefs = useRef([]);\n\n  const controlFileBtn = (e, index) => {\n    e.preventDefault();\n    inputRefs.current[index].click();\n  };\n\n  const addImg = (e, index) => {\n    setIndex(index);\n\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n      setFileInfo(e.target.files[0].type);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      createCropPreview(imgRef.current, crop, filename);\n    }\n  };\n\n  const createCropPreview = async (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n\n        blob.name = fileName;\n        window.URL.revokeObjectURL(previewUrl);\n        const tempPreviewUrl = [...previewUrl];\n        tempPreviewUrl.splice(index, 1, window.URL.createObjectURL(blob));\n        setPreviewUrl(tempPreviewUrl);\n        prevImg(tempPreviewUrl);\n        const blobToFile = new File([blob], filename);\n        const tempFile = [...file];\n        tempFile.splice(index, 1, blobToFile);\n        setFile(tempFile);\n      }, fileInfo);\n    }).catch(err => {\n      console.log('blob promise err', err);\n    });\n  };\n\n  useEffect(() => {\n    imgFormData(file);\n  }, [file]);\n  useEffect(() => {\n    setUpImg([]);\n  }, [showEdit]);\n  console.log(showEdit, upImg, 'sho');\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(TitleCenter, {\n    onClick: e => clickEdit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"\\uD504\\uB85C\\uD544\\uBCC0\\uACBD\"), __jsx(ProfileRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, showEdit && __jsx(EditWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(EditImg, {\n    src: '/images/edit.svg',\n    width: 16,\n    onClick: e => controlFileBtn(e, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), __jsx(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    accept: \"image/*\",\n    ref: ref => inputRefs.current[0] = ref,\n    style: {\n      display: 'none'\n    },\n    onChange: e => addImg(e, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), showEdit && previewUrl && previewUrl[0] ? __jsx(Img, {\n    src: previewUrl[0],\n    width: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }) : __jsx(Img, {\n    src: userInfo && userInfo.profile_url ? userInfo.profile_url : '/images/default_profile.png',\n    width: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), showEdit && __jsx(ProfileRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(ReactCropDiv, {\n    userColor: userColor,\n    src: upImg,\n    onImageLoaded: onLoad,\n    crop: crop,\n    onChange: img => setCrop(img),\n    onComplete: makeClientCrop,\n    uploadImg: upImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })));\n}\nconst Row = styled.div.withConfig({\n  displayName: \"PhotoUpload__Row\",\n  componentId: \"sc-5k8m7r-0\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;\"]);\nconst PreviewImg = styled.img.withConfig({\n  displayName: \"PhotoUpload__PreviewImg\",\n  componentId: \"sc-5k8m7r-1\"\n})([\"width:100%;\"]);\nconst ImageRow = styled.div.withConfig({\n  displayName: \"PhotoUpload__ImageRow\",\n  componentId: \"sc-5k8m7r-2\"\n})([\"display:flex;flex-direction:column;\"]);\nconst ProfileRow = styled.div.withConfig({\n  displayName: \"PhotoUpload__ProfileRow\",\n  componentId: \"sc-5k8m7r-3\"\n})([\"display:flex;width:100%;justify-content:center;margin:20px 0 20px;\"]);\nconst TitleCenter = styled.div.withConfig({\n  displayName: \"PhotoUpload__TitleCenter\",\n  componentId: \"sc-5k8m7r-4\"\n})([\"display:flex;align-items:center;justify-content:center;width:100%;margin:20px 0;\", \" font-size:\", \";\"], BlueEditBtn, props => props.theme.mFont);\nconst ProfileCenter = styled.div.withConfig({\n  displayName: \"PhotoUpload__ProfileCenter\",\n  componentId: \"sc-5k8m7r-5\"\n})([\"display:flex;align-items:center;justify-content:center;position:relative;\"]);\nconst ReactCropDiv = styled(ReactCrop).withConfig({\n  displayName: \"PhotoUpload__ReactCropDiv\",\n  componentId: \"sc-5k8m7r-6\"\n})([\"margin-bottom:\", \";width:\", \";height:\", \";\"], props => props.uploadImg.length > 0 ? '20px' : '0px', props => props.uploadImg.length && '200px', props => props.uploadImg.length && '200px');\nconst EditImg = styled.img.withConfig({\n  displayName: \"PhotoUpload__EditImg\",\n  componentId: \"sc-5k8m7r-7\"\n})([\"width:\", \";height:\", \";border-radius:\", \"px;\"], props => props.width || '30px', props => props.width || '30px', props => props.width / 2 || 15);\nconst EditWrap = styled.div.withConfig({\n  displayName: \"PhotoUpload__EditWrap\",\n  componentId: \"sc-5k8m7r-8\"\n})([\"cursor:pointer;background-color:#666;position:absolute;bottom:0;left:46px;margin-right:0;width:24px;height:24px;border-radius:12px;display:flex;align-items:center;justify-content:center;\"]);\nconst Img = styled.img.withConfig({\n  displayName: \"PhotoUpload__Img\",\n  componentId: \"sc-5k8m7r-9\"\n})([\"width:\", \";height:\", \";border-radius:\", \"px;margin-right:0;border:1px solid #ddd;\"], props => props.width || '30px', props => props.width || '30px', props => props.width / 2 || 15);","map":{"version":3,"sources":["/Users/hj/develop/myproject/myDiary/client/src/components/common/PhotoUpload.js"],"names":["styled","css","useState","useRef","useCallback","useEffect","useSelector","ReactCrop","BlueEditBtn","Upload","props","imgFormData","prevImg","showEdit","clickEdit","file","setFile","upImg","setUpImg","crop","setCrop","unit","width","aspect","previewUrl","setPreviewUrl","index","setIndex","filename","setFilename","fileInfo","setFileInfo","imgRef","userColor","state","common","userInfo","inputRefs","controlFileBtn","e","preventDefault","current","click","addImg","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","name","type","onLoad","img","makeClientCrop","height","createCropPreview","image","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","Error","window","URL","revokeObjectURL","tempPreviewUrl","splice","createObjectURL","blobToFile","File","tempFile","catch","err","console","log","ref","display","profile_url","Row","div","PreviewImg","ImageRow","ProfileRow","TitleCenter","theme","mFont","ProfileCenter","ReactCropDiv","uploadImg","EditImg","EditWrap","Img"],"mappings":"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","sourcesContent":["import styled, { css } from 'styled-components';\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ReactCrop from 'react-image-crop';\nimport { BlueEditBtn } from '../../utils/theme';\n\nexport default function Upload(props) {\n  const { imgFormData, prevImg, showEdit, clickEdit } = props;\n  const [file, setFile] = useState([null]);\n  const [upImg, setUpImg] = useState([]);\n  const [crop, setCrop] = useState({ unit: '%', width: 100, aspect: 1 });\n  const [previewUrl, setPreviewUrl] = useState([null]);\n  const [index, setIndex] = useState(null);\n  const [filename, setFilename] = useState('');\n  const [fileInfo, setFileInfo] = useState('');\n  const imgRef = useRef(null);\n  const userColor = useSelector(state => state.common.userColor);\n  const userInfo = useSelector(state => state.common.userInfo);\n  let inputRefs = useRef([]);\n  const controlFileBtn = (e, index) => {\n    e.preventDefault();\n    inputRefs.current[index].click();\n  };\n\n  const addImg = (e, index) => {\n    setIndex(index);\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setUpImg(reader.result));\n      reader.readAsDataURL(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n      setFileInfo(e.target.files[0].type);\n    }\n  };\n\n  const onLoad = useCallback(img => {\n    imgRef.current = img;\n  }, []);\n\n  const makeClientCrop = async crop => {\n    if (imgRef.current && crop.width && crop.height) {\n      createCropPreview(imgRef.current, crop, filename);\n    }\n  };\n\n  const createCropPreview = async (image, crop, fileName) => {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          reject(new Error('Canvas is empty'));\n          return;\n        }\n        blob.name = fileName;\n        window.URL.revokeObjectURL(previewUrl);\n        const tempPreviewUrl = [...previewUrl];\n        tempPreviewUrl.splice(index, 1, window.URL.createObjectURL(blob));\n        setPreviewUrl(tempPreviewUrl);\n        prevImg(tempPreviewUrl);\n\n        const blobToFile = new File([blob], filename);\n        const tempFile = [...file];\n        tempFile.splice(index, 1, blobToFile);\n        setFile(tempFile);\n      }, fileInfo);\n    }).catch(err => {\n      console.log('blob promise err', err);\n    });\n  };\n  useEffect(() => {\n    imgFormData(file);\n  }, [file]);\n  useEffect(() => {\n    setUpImg([]);\n  }, [showEdit]);\n  console.log(showEdit, upImg, 'sho');\n  return (\n    <Row>\n      <TitleCenter onClick={e => clickEdit(e)}>프로필변경</TitleCenter>\n      <ProfileRow>\n        <ProfileCenter>\n          {showEdit && (\n            <EditWrap>\n              <EditImg src={'/images/edit.svg'} width={16} onClick={e => controlFileBtn(e, 0)} />\n            </EditWrap>\n          )}\n\n          <input\n            name=\"file\"\n            type=\"file\"\n            accept=\"image/*\"\n            ref={ref => (inputRefs.current[0] = ref)}\n            style={{ display: 'none' }}\n            onChange={e => addImg(e, 0)}\n          />\n\n          {showEdit && previewUrl && previewUrl[0] ? (\n            <Img src={previewUrl[0]} width={70} />\n          ) : (\n            <Img\n              src={userInfo && userInfo.profile_url ? userInfo.profile_url : '/images/default_profile.png'}\n              width={70}\n            />\n          )}\n        </ProfileCenter>\n      </ProfileRow>\n      {showEdit && (\n        <ProfileRow>\n          <ReactCropDiv\n            userColor={userColor}\n            src={upImg}\n            onImageLoaded={onLoad}\n            crop={crop}\n            onChange={img => setCrop(img)}\n            onComplete={makeClientCrop}\n            uploadImg={upImg}\n          />\n        </ProfileRow>\n      )}\n    </Row>\n  );\n}\nconst Row = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst PreviewImg = styled.img`\n  width: 100%;\n`;\nconst ImageRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst ProfileRow = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin: 20px 0 20px;\n`;\nconst TitleCenter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin: 20px 0;\n${BlueEditBtn}\n\n  font-size: ${props => props.theme.mFont};\n`;\n\nconst ProfileCenter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n`;\n\nconst ReactCropDiv = styled(ReactCrop)`\n  margin-bottom: ${props => (props.uploadImg.length > 0 ? '20px' : '0px')};\n  width: ${props => props.uploadImg.length && '200px'};\n  height: ${props => props.uploadImg.length && '200px'};\n`;\nconst EditImg = styled.img`\n  width: ${props => props.width || '30px'};\n  height: ${props => props.width || '30px'};\n  border-radius: ${props => props.width / 2 || 15}px;\n`;\nconst EditWrap = styled.div`\n  cursor: pointer;\n  background-color: #666;\n  position: absolute;\n  bottom: 0;\n  left: 46px;\n  margin-right: 0;\n  width: 24px;\n  height: 24px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Img = styled.img`\n  width: ${props => props.width || '30px'};\n  height: ${props => props.width || '30px'};\n  border-radius: ${props => props.width / 2 || 15}px;\n  margin-right: 0;\n  border: 1px solid #ddd;\n`;\n"]},"metadata":{},"sourceType":"module"}